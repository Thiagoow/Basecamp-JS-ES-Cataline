1º Instalamos as dependências do Babel no terminal (VSCode) da pasta "ECMAScript6+" com o comando:

    npm i @babel/core @babel/cli @babel/preset-env -D

(Instalamos com o VSCode numa pasta específica do projeto, e não na pasta raiz do projeto
clicando com o botão direito na pasta e abrindo "Open in integrated terminal")

2º O arquivo ".gitignore" ignora a pasta ou arquivo específico do projeto,
e não envia pro seu repositório lá no GitHub.

3º Esse comando converte com o Babel o código do ES6 pro ES5:
    npx babel ./src/main.js -o ./public/bundle.js - w

Por isso, pegamos ele e colocamos no objeto "scripts" do package.json,
mas tirando o "npx" do começo, ficando:

    "dev": "babel ./src/main.js -o ./public/bundle.js -w"

(Dentro do objeto "scripts" do package.json)

4º Sendo assim, damos start no babel apenas com o comando:

    npm run dev

A partir das aulas de webpack, excluímos as dev dependencies do package.json,
e instalamos o webpack junto com o babel, com esse comando:

    npm install webpack webpack-cli webpack-dev-server @babel/polyfill -D

Destrinchando o comando:
webpack: Pacote com funções principais do webpack;
webpack-cli: Utilizamos a linha de comando do webpack;
webpack-dev-server: Permite levantar um server de dev;
@babel/polyfill: Permite suporte de browser, adapta os códigos ES>=6 pra ES<=5, em browsers desatualizados;
--save-dev OU -D: Salva o comando como dependências de dev.